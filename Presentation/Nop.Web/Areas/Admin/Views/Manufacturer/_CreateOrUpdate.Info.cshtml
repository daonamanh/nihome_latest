@model ManufacturerModel
<div class="card-body">
    @(await Html.LocalizedEditorAsync<ManufacturerModel, ManufacturerLocalizedModel>("manufacturer-name-localized",
    @<div>
        <div class="form-group row">
            <div class="col-md-3">
                <nop-label asp-for="@Model.Locales[item].Name" />
            </div>
            <div class="col-md-9">
                <nop-editor asp-for="@Model.Locales[item].Name" />
                <span asp-validation-for="@Model.Locales[item].Name"></span>
            </div>
        </div>
        <div class="form-group row">
            <div class="col-md-3">
                <nop-label asp-for="@Model.Locales[item].Description" />
            </div>
            <div class="col-md-9">
                <nop-editor asp-for="@Model.Locales[item].Description" asp-template="RichEditor" />
                <span asp-validation-for="@Model.Locales[item].Description"></span>
            </div>
        </div>
        <input type="hidden" asp-for="@Model.Locales[item].LanguageId" />
    </div>
,
    @<div>
        <div class="form-group row">
            <div class="col-md-3">
                <nop-label asp-for="Name" />
            </div>
            <div class="col-md-9">
                <nop-editor asp-for="Name" asp-required="true" />
                <span asp-validation-for="Name"></span>
            </div>
        </div>
        <div class="form-group row">
            <div class="col-md-3">
                <nop-label asp-for="Description" />
            </div>
            <div class="col-md-9">
                <nop-editor asp-for="Description" asp-template="RichEditor" />
                <span asp-validation-for="Description"></span>
            </div>
        </div>
    </div>))
    
    <div class="form-group row advanced-setting">
        <div class="col-md-3">
            <nop-label asp-for="PictureId" />
        </div>
        <div class="col-md-9">
            <nop-editor asp-for="PictureId" />
            <span asp-validation-for="PictureId"></span>
        </div>
    </div>
	<div class="form-group">
		@Html.LabelFor(model => model.Price, new { @class = "control-label col-md-3" })
		<div class="col-md-9">
			@Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
			@Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
		</div>
	</div>
	@* <div class="form-group">
		<label for="City">City</label>
		@Html.DropDownListFor(model => model.City, Model.AvailableCities, "Select a City", new { @class = "form-control" })
	</div> *@

	<div class="form-group">
		<label asp-for="CityId" class="control-label">City</label>
		<select asp-for="CityId" asp-items="Model.AvailableCities" class="form-control">
			<option value="">-- Select City --</option>
		</select>
	</div>
	<div class="form-group">
		<label asp-for="DistrictId" class="control-label">District</label>
	<select asp-for="DistrictId" class="form-control" id="DistrictId">
		@if (Model.AvailableDistricts != null && Model.AvailableDistricts.ContainsKey(Model.CityId ?? 0))
		{
			foreach (var district in Model.AvailableDistricts[Model.CityId ?? 0])
			{
				if (district.Value == Model.DistrictId.ToString())
				{
					<option value="@district.Value" selected>@district.Text</option>
				}
				else
				{
					<option value="@district.Value">@district.Text</option>
				}
			}
		}
	</select>
	</div>

	@* <div class="form-group">
		<label asp-for="CityId" class="control-label">City</label>
		<select asp-for="CityId"  class="form-control">
			<option value="1">Tphcm</option>
			<option value="2">Hanoi</option>
			<option value="3">Danang</option>

		</select>
	</div> *@


</div>
<script>
	document.getElementById("CityId").addEventListener("change", function () {
		const cityId = this.value;
		const districts = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.AvailableDistricts));
		const districtDropdown = document.getElementById("DistrictId");

		// Clear current options
		districtDropdown.innerHTML = "";

		// Add new options based on selected city
		if (districts[cityId]) {
			districts[cityId].forEach(district => {
				const option = document.createElement("option");
				option.value = district.Value;
				option.text = district.Text;
				districtDropdown.add(option);
			});
		}
	});
</script>

