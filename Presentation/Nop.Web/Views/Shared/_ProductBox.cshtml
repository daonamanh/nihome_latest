@model ProductOverviewModel

@using Nop.Core
@using Nop.Core.Domain.Catalog
@using Nop.Core.Domain.Orders
@using Nop.Core.Domain.Tax

@inject CatalogSettings catalogSettings
@inject IWorkContext workContext

@{
    //prepare "Add to cart" AJAX link
    var addtocartlink = "";
    var shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart;
    var quantity = 1;
    if (Model.ProductPrice.ForceRedirectionAfterAddingToCart)
    {
        addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity, forceredirection = Model.ProductPrice.ForceRedirectionAfterAddingToCart });
    }
    else
    {
        addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity });
    }

    var addtowishlistlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = (int)ShoppingCartType.Wishlist, quantity = quantity });
    var addtocomparelink = Url.RouteUrl("AddProductToCompare", new { productId = Model.Id });
}
<div class="product-item" style="border-radius: 8px;border:1px solid #ddd;background-color:white" data-productid="@Model.Id">
    <div class="picture" >
        @if (Model.PictureModels.Count > 1)
        {
            <div class="swiper" id="swiper-@Model.Id" dir="@Html.GetUIDirection(!await Html.ShouldUseRtlThemeAsync())">
                <div class="swiper-wrapper">
                    @foreach (var picture in Model.PictureModels)
                    {
                        <a class="swiper-slide" style="height:243px;width:100%" href="@(Url.RouteUrl<Product>(new { SeName = Model.SeName }))" title="@picture.Title">
							<img alt="@picture.AlternateText" src="@picture.ImageUrl" title="@picture.Title" style="height:243px;width:100%" />
                        </a>
                    }
                </div>
                <!-- Add Pagination -->
                <div class="swiper-pagination"></div>
            </div>

            <script asp-location="Footer">
                new Swiper('#swiper-@(Model.Id)', {
                    pagination: {
                        clickable: true,
                        el: '.swiper-pagination',
                    },
                });
            </script>
        }
        else
        {
            var picture = Model.PictureModels.FirstOrDefault();
            <a@*  href="@(Url.RouteUrl<Product>(new { SeName = Model.SeName }))" *@ title="@picture?.Title">
                <img alt="@picture?.AlternateText" src="@picture?.ImageUrl" title="@picture?.Title" />
            </a>
        }
    </div>
	<div class="details" style="font-family: Roboto, sans-serif;">
		<h2 class="product-title" style="font-size: 18px;font-weight: 600;line-height: 23px;color: rgb(19, 19, 19);white-space: break-spaces;margin-top:15px">
            <a @* href="@(Url.RouteUrl<Product>(new {SeName = Model.SeName }))" *@ style="text-decoration:none">@Model.Name</a>
        </h2>
		<div class="sc-kHOZwM bnRFYD"><div data-tip="true" data-for="129 - 131 Tôn Thất Đạm, P. Bến Nghé, Q.1, HCM" class="text-truncate undefined">@Html.Raw(Model.Address)</div></div>
		@if (Model.AvailableStartDateTimeUtc.HasValue)
		{
			<div class="available-date">
				Available from: @Model.AvailableStartDateTimeUtc.Value.ToLocalTime().ToString("MM/dd/yyyy")
			</div>
		}

		@*  <h2 class="product-title">
			<a>@Model.ManufacturerPartNumber</a>
		</h2>   *@
		@* @if (catalogSettings.ShowManufacturer && !string.IsNullOrEmpty(Model.ManufacturerPartNumber))
		{
			<div class="">
				@Model.ManufacturerPartNumber
			</div>
		} *@
		@* @if (Model.Manufacturers != null && Model.Manufacturers.Count > 0)
		{
			<div class="manufacturers">
				@if (Model.Manufacturers.Count == 1)
				{
					<span class="label">@T("Products.Manufacturer"):</span>
				}
				else
				{
					<span class="label">@T("Products.Manufacturers"):</span>
				}
				<span class="value">
					@for (var i = 0; i < Model.Manufacturers.Count; i++)
					{
						var item = Model.Manufacturers[i];
						<a href="@(Url.RouteUrl<Manufacturer>(new { SeName = item.SeName }))">@item.Name</a>
						@if (i != Model.Manufacturers.Count - 1)
						{
							<span class="separator">,</span>
						}
					}
				</span>
			</div>
		} *@
        @if (catalogSettings.ShowSkuOnCatalogPages && !string.IsNullOrEmpty(Model.Sku))
        {
            <div class="sku">
                @Model.Sku
            </div>
        }
        @if (Model.ReviewOverviewModel.AllowCustomerReviews)
        {
            var ratingPercent = 0;
            if (Model.ReviewOverviewModel.TotalReviews != 0)
            {
                ratingPercent = ((Model.ReviewOverviewModel.RatingSum * 100) / Model.ReviewOverviewModel.TotalReviews) / 5;
            }
            @* <div class="product-rating-box" title="@string.Format(T("Reviews.TotalReviews").Text, Model.ReviewOverviewModel.TotalReviews)">
                <div class="rating">
                    <div style="width: @(ratingPercent)%">
                    </div>
                </div>
            </div> *@
        }
        <div class="description" @(catalogSettings.ShowShortDescriptionOnCatalogPages ? "" : "data-short-description=none")>
            @Html.Raw(Model.ShortDescription)
        </div>
        <div class="add-info">
            @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.ProductBoxAddinfoBefore, additionalData = Model })
            @* <div class="prices">
                @if (!string.IsNullOrEmpty(Model.ProductPrice.OldPrice))
                {
                    <span class="price old-price">@Model.ProductPrice.OldPrice</span>
                }
                <span class="price actual-price">@Model.ProductPrice.Price</span>
                @if (Model.ProductPrice.DisplayTaxShippingInfo)
                {
                    var inclTax = await workContext.GetTaxDisplayTypeAsync() == TaxDisplayType.IncludingTax;
                    //tax info is already included in the price (incl/excl tax). that's why we display only shipping info here
                    //of course, you can modify appropriate locales to include VAT info there
                    <span class="tax-shipping-info">
                        @T(inclTax ? "Products.Price.TaxShipping.InclTax" : "Products.Price.TaxShipping.ExclTax", Url.RouteTopicUrl("shippinginfo"))
                    </span>
                }
                @if (!string.IsNullOrEmpty(Model.ProductPrice.BasePricePAngV))
                {
                    <div class="base-price-pangv">
                        @Model.ProductPrice.BasePricePAngV
                    </div>
                }
            </div> *@
			<div class="left-icon" style="    width: 100%;   margin-top: 6px;    height: auto;    margin-bottom: 15px;">
				<ul style="display: flex; flex-wrap: wrap; gap: 20px; list-style-type: none; padding: 0; margin: 0;">
					<li style="width: 45%; display: flex; align-items: center;">
						<a href="https://www.facebook.com/niconvn" target="_blank">
							<img src="/themes/defaultclean/content/images/image_2499498064_fc417a11b1.jpg" alt="facebook icon" style="width: 23px;">
						</a>
						<span class="sc-dYPfWK ZXXWb" style="margin-left: 10px;">@T("cityriver")</span>
					</li>

					<li style="width: 45%; display: flex; align-items: center;">
						<a href="https://plus.google.com/" target="_blank">
							<img src="/themes/defaultclean/content/images/image_1278336190_182ee67464.jpg" alt="google icon" style="width: 23px;">
						</a>
						<span class="sc-dYPfWK ZXXWb" style="margin-left: 10px;">@T("freelaundry")</span>
					</li>

					<li style="width: 45%; display: flex; align-items: center;">
						<a href="https://www.youtube.com/" target="_blank">
							<img src="/themes/defaultclean/content/images/image_160596215_5eae8d6c21.jpg" alt="youtube icon" style="width: 23px;">
						</a>
						<span class="sc-dYPfWK ZXXWb" style="margin-left: 10px;">@T("freegym")</span>
					</li>

					<li style="width: 45%; display: flex; align-items: center;">
						<a title="login" href="/login">
							<img src="/themes/defaultclean/content/images/image_3873386263_59c97ca572.jpg" alt="login icon" style="width: 23px;">
						</a>
						<span class="sc-dYPfWK ZXXWb" style="margin-left: 10px;">
							@T("comfortableroom")
						</span>
					</li>
				</ul>

			</div>
			<h2 class="product-title" style="font-size: 14px;font-weight: 400;line-height: 20px;color: rgb(71, 85, 105);">
				<a>@Model.ShortDescription</a>
			</h2>
            @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.ProductBoxAddinfoMiddle, additionalData = Model })
            <div class="buttons">
                @if (!Model.ProductPrice.DisableBuyButton)
                {
                    var addToCartText = T("ShoppingCart.AddToCart").Text;
                    if (Model.ProductPrice.IsRental)
                    {
                        addToCartText = T("ShoppingCart.Rent").Text;
                    }
                    if (Model.ProductPrice.AvailableForPreOrder)
                    {
                        addToCartText = T("ShoppingCart.PreOrder").Text;
                    }
                    @* <button type="button" class="button-2 product-box-add-to-cart-button" onclick="AjaxCart.addproducttocart_catalog('@addtocartlink');return false;">@(addToCartText)</button> *@
					@* <button style="background-color:lightgray;width:100%;color:#f16a24" type="button" class="button-2 product-box-add-to-cart-button" onclick="AjaxCart.addproducttocart_catalog('@addtocartlink');return false;">Đặt phòng</button>
 *@                }
               @*  @if (!Model.ProductPrice.DisableAddToCompareListButton)
                {
                    <button type="button" class="button-2 add-to-compare-list-button" title="@T("ShoppingCart.AddToCompareList")" onclick="AjaxCart.addproducttocomparelist('@addtocomparelink');return false;">@T("ShoppingCart.AddToCompareList")</button>
                }
                @if (!Model.ProductPrice.DisableWishlistButton)
                {
                    <button type="button" class="button-2 add-to-wishlist-button" title="@T("ShoppingCart.AddToWishlist")" onclick="AjaxCart.addproducttocart_catalog('@addtowishlistlink');return false;">@T("ShoppingCart.AddToWishlist")</button>
                } *@
            </div>
            @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.ProductBoxAddinfoAfter, additionalData = Model })
        </div>
    </div>
	<div class="book">
		<div class="item-info-all">
			<div class="item-info">
				<span class="sc-bXTejn kAEujO">@T("from")</span>
				<div class="sc-brSvTw cDrvXt" style="color:#e24d14">@Model.Price.ToString("C0")</div>
				<span class="sc-gIDmLj eYYHiZ">@T("vnd/month")</span>
				<div class="sc-fHeRUh kzgbTJ">@T("includetaxfee")</div>
			</div>
			<div class="sc-dkYRCH jlZaBr mt-4">
				<button style="background-color: #e24d14 !important; border:0; height:auto;width:auto;border-radius:28px"
						class="MuiButton-root MuiButton-text MuiButton-textPrimary MuiButton-sizeMedium MuiButton-textSizeMedium MuiButtonBase-root sc-leSONj ehxPr is-circle sc-dMOJrz jlPWpC filter-header__apply-button primary-btn ml-3 css-vfuakh"
						tabindex="0"
						type="button"
						onclick="window.location.href='@(Url.RouteUrl<Manufacturer>(new { SeName = Model.SeName }))'; return false;">
					<span class=" d-lg-block" style="font-family:sans-serif">
						@T("chooseroom")
					</span>
				</button>

			</div>
		</div>
	</div>
</div>
