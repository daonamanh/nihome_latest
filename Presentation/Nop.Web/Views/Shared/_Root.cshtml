@{
    Layout = "_Root.Head";
}
<head>
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />

</head>
@await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.BodyStartHtmlTagAfter })
@{ await Html.RenderPartialAsync("_Notifications"); }
@{ await Html.RenderPartialAsync("_JavaScriptDisabledWarning"); }
<div class="master-wrapper-page" style="background-color:#fafafa">
    @await Component.InvokeAsync(typeof(AdminHeaderLinksViewComponent))
    @{ await Html.RenderPartialAsync("_Header"); }
    <script asp-location="Footer">
        var localized_data = {
            AjaxCartFailure: "@T("AjaxCart.Failure")"
        };
        AjaxCart.init(false, '.header-links .cart-qty', '.header-links .wishlist-qty', '#flyout-cart', localized_data);
    </script>
	<script async src="https://www.googletagmanager.com/gtag/js?id=G-DFD1NPCVYH"></script>
	<script>
		window.dataLayer = window.dataLayer || [];
		function gtag() { dataLayer.push(arguments); }
		gtag('js', new Date());
		gtag('config', 'G-DFD1NPCVYH');
	</script>
	<div class="header-menu sticky-header" style="    z-index: 1;
    max-width: 81.375rem;
    margin: 0px auto;
    width: auto;">
		@* <div class="header-logo cursor-pointer">
			<img layout="fill" src="/Themes/DefaultClean/Content/images/logo1.png" alt="logo" title="logo" placeholder="blur"
				 href="index.html" />
		</div> *@
        @await Component.InvokeAsync(typeof(TopMenuViewComponent))
		<ul class="top-menu notmobile">
			
			@* <a class="header-menu__item" href="customer.html">
				<span class="change"> Hội viên thân thiết</span>
			</a>
			<a class="header-menu__item" href="detail.html">
				<span class="change">Thương hiệu thành viên</span>
			</a> *@
		</ul>
    </div>
	<div class="master-wrapper-content" id="main" role="main" style=" margin-bottom:-7%;  max-width: 81.375rem;margin: 0px auto;width:auto;">
        @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.ContentBefore })

        @if (IsSectionDefined("Breadcrumb"))
        {
            @RenderSection("Breadcrumb") 
        }
        <div class="master-column-wrapper">
            @RenderBody()
        </div>
        @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.ContentAfter })
    </div>
    @await Component.InvokeAsync(typeof(FooterViewComponent))
</div>
@await Component.InvokeAsync(typeof(EuCookieLawViewComponent))
@await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.BodyEndHtmlTagBefore })
